{"version":3,"sources":["components/Test.js","components/TopPanel.js","components/AddPost.js","components/Post.js","components/CreatePostPage.js","App.js","reportWebVitals.js","index.js"],"names":["Component","TopPanel","AddPost","state","name","text","changeName","e","setState","target","value","changeText","addPost","data","tasks","props","addDataPost","className","type","this","onChange","onClick","Post","counter","addLike","console","log","post","CreatePostPage","posts","concat","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEmBA,YCOJC,MAPf,WACI,OACI,8BACI,yCC8BGC,E,4MA/BXC,MAAQ,CACJC,KAAM,GACNC,KAAM,I,EAEVC,WAAa,SAAAC,GACT,EAAKC,SAAS,CAACJ,KAAKG,EAAEE,OAAOC,S,EAEjCC,WAAa,SAAAJ,GACT,EAAKC,SAAS,CAACH,KAAKE,EAAEE,OAAOC,S,EAEjCE,QAAU,WACN,IAAMC,EAAO,CACTT,KAAM,EAAKD,MAAMC,KACjBU,MAAO,EAAKX,MAAME,MAEE,KAApB,EAAKF,MAAMC,MAAmC,KAApB,EAAKD,MAAME,OACrC,EAAKU,MAAMC,YAAYH,GACvB,EAAKL,SAAS,CAACJ,KAAM,GAAIC,KAAM,O,uDAInC,OACI,sBAAKY,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOR,MAAOS,KAAKhB,MAAMC,KAAMgB,SAAUD,KAAKb,aAC1D,uBAAOY,KAAK,OAAOR,MAAOS,KAAKhB,MAAME,KAAMe,SAAUD,KAAKR,aAC1D,wBAAQM,UAAU,kBAAkBI,QAASF,KAAKP,QAAlD,8DACA,4BAAIO,KAAKhB,MAAME,c,GA3BTL,aCmBPsB,E,4MAlBXnB,MAAQ,CACJoB,QAAS,G,EAEbC,QAAU,WACN,EAAKhB,SAAS,CAACe,QAAS,EAAKpB,MAAMoB,QAAU,K,uDAI7C,OADAE,QAAQC,IAAIP,KAAKJ,OAEb,sBAAKE,UAAU,OAAf,UACI,uCAAUE,KAAKJ,MAAMY,KAAKvB,KAA1B,OACA,6CAAgBe,KAAKJ,MAAMY,KAAKb,SAChC,uBAAMO,QAASF,KAAKK,QAApB,qBAAwCL,KAAKhB,MAAMoB,kB,GAb/CvB,aCwBL4B,E,4MAnBXzB,MAAQ,CACJ0B,MAAO,I,EAEXb,YAAc,SAAAH,GACV,EAAKL,SAAS,CAACqB,MAAO,EAAK1B,MAAM0B,MAAMC,OAAOjB,M,uDAI9C,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAASG,YAAeG,KAAKH,cAC7B,qBAAKC,UAAU,aAAf,SACKE,KAAKhB,MAAM0B,MAAME,KAAI,SAACJ,EAAMK,GAAP,OAAa,cAAC,EAAD,CAAML,KAAQA,GAAWK,e,GAdnDhC,aCIdiC,MARf,WACE,OACE,8BACI,cAAC,EAAD,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0f27e65c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./styles.css\"\r\nclass Test extends Component {\r\n    state = {\r\n        name: 'red',\r\n        counter: 0\r\n    }\r\n\r\n    changeColor = () => {\r\n        const colorName = this.state.name;\r\n        console.log(colorName);\r\n        if (colorName === 'red') {\r\n            this.setState({name: \"green\"})\r\n    }\r\n    else {\r\n         this.setState({name: \"red\"})\r\n        }\r\n    this.setState({counter: this.state.counter + 1})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"test\">\r\n                <p className={this.state.name}>Test</p>\r\n                <p>{this.state.counter}</p>\r\n                <button onClick={this.changeColor}>Click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\r\n\r\nfunction TopPanel() {\r\n    return (\r\n        <nav>\r\n            <h1>Logo</h1>\r\n        </nav>\r\n    )\r\n}\r\nexport default TopPanel;","import React, {Component} from 'react';\r\nimport \"./styles.css\"\r\n\r\nclass AddPost extends Component {\r\n    state = {\r\n        name: '',\r\n        text: ''\r\n    }\r\n    changeName = e => {\r\n        this.setState({name:e.target.value})\r\n    }\r\n    changeText = e => {\r\n        this.setState({text:e.target.value})\r\n    }\r\n    addPost = () => {\r\n        const data = {\r\n            name: this.state.name,\r\n            tasks: this.state.text\r\n        }\r\n        if (this.state.name !== '' && this.state.text !== '') {\r\n            this.props.addDataPost(data);\r\n            this.setState({name: '', text: ''})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-post\">\r\n                <input type=\"text\" value={this.state.name} onChange={this.changeName}/>\r\n                <input type=\"text\" value={this.state.text} onChange={this.changeText}/>\r\n                <button className=\"add-post-button\" onClick={this.addPost}>Добавити</button>\r\n                <p>{this.state.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddPost;","import React, {Component} from 'react';\r\nimport \"./styles.css\"\r\n\r\nclass Post  extends Component{\r\n    state = {\r\n        counter: 0\r\n    }\r\n    addLike = () => {\r\n        this.setState({counter: this.state.counter + 1})\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        return(\r\n            <div className=\"post\">\r\n                <p>Name: {this.props.post.name} </p>\r\n                <p>Done tasks: {this.props.post.tasks}</p>\r\n                <span onClick={this.addLike}> &#10084; {this.state.counter}</span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Post;","import React, {Component} from 'react';\r\nimport TopPanel from \"./TopPanel\";\r\nimport AddPost from \"./AddPost\";\r\nimport Post from \"./Post\";\r\n\r\nimport \"./styles.css\"\r\n\r\nclass CreatePostPage extends Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n    addDataPost = data => {\r\n        this.setState({posts: this.state.posts.concat(data)})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <TopPanel />\r\n                <AddPost addDataPost = {this.addDataPost} />\r\n                <div className=\"post-block\">\r\n                    {this.state.posts.map((post, i) => <Post post = {post} key={i}/>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CreatePostPage;","import React from 'react';\nimport Test from \"./components/Test\";\nimport CreatePostPage from \"./components/CreatePostPage\";\nfunction App() {\n  return (\n    <div>\n        <CreatePostPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}